/*
Hint-
(1/1)
Try to find whether each of 26 next letters are in the given string array.
*/

class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        /*
        // O(n)-
        int tar = target - 'a';
        int diff = 0;
        int minDiff = Integer.MAX_VALUE;
        char ans = 'a';

        for(int i=0; i<letters.length; i++) {
            int asc = letters[i] - 'a';
            diff = asc - tar;
            if(diff>0 && diff<minDiff) {
                minDiff = diff;
                ans = letters[i];
            }
        }
        if(diff<=0) return letters[0];

        return ans;
        */

        // O(logn), Binary Search-
        int low = 0;
        int high = letters.length-1;
        char res = letters[0];
        while(low<=high)
        {
            int mid = low + (high-low)/2;

            // As we don't have to return same element as target, we have to return element just greater than the target element, so when we get the current element as target, it means you will be getting the next greater character in right direction as letters are sorted in lexicographical order;
            if(letters[mid]==target ) {
                low = mid+1;
            }
            else if(letters[mid]<target) {   // If target is still greater, then go to rightward direction;
                low = mid+1;
            }  
            else {  // The moment you get that target is smaller than what we expect, try searching it in leftward direction, but first store this greater character as it might be the immediate next of target;
                res = letters[mid];
                high = mid-1;
            }
        }   
        return res; 
    }
}

Related Topics-
Array
Binary Search
