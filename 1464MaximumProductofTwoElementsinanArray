/*
Hint
(1/1)
Use brute force: two loops to select i and j, then select the maximum value of (nums[i]-1)*(nums[j]-1).
*/

// 1st Solution-
class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        int m1 = 0;
        int m2 = 0;
        for(int i=0; i<n; i++) {
            if(nums[i] > m1) {
                m2 = m1;
                m1 = nums[i];
            }
            else if(nums[i] > m2) {
                m2 = nums[i];
            }
        }
        return (m1-1) * (m2-1);
    }
}

// 2nd Solution-
class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);

        return (nums[n-1]-1)*(nums[n-2]-1);
    }
}

Related Topics-
Array
Sorting
Heap (Priority Queue)
