/*
Hint-
(1/3)
Use a stack of characters.
(2/3)
When you encounter an opening bracket, push it to the top of the stack.
(3/3)
When you encounter a closing bracket, 
check if the top of the stack was the opening for it. If yes, pop it from the stack. 
Otherwise, return false.
*/

class Solution {
    public boolean isValid(String s) {
        Stack<Character> leftSymbols = new Stack<>();
        for (char c : s.toCharArray()) {
            if (c == '(' || c == '{' || c == '[') {
                leftSymbols.push(c);
            }
            else if (c == ')' && !leftSymbols.isEmpty() && leftSymbols.peek() == '(') {
                leftSymbols.pop();
            } else if (c == '}' && !leftSymbols.isEmpty() && leftSymbols.peek() == '{') {
                leftSymbols.pop();
            } else if (c == ']' && !leftSymbols.isEmpty() && leftSymbols.peek() == '[') {
                leftSymbols.pop();
            }
            else {
                return false;
            }
        }
        return leftSymbols.isEmpty();
    }
}

Related Topics-
String
Stack
